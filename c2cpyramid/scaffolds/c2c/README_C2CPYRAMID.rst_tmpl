C2C_PYRAMID README
==================

Note::

    /!\ Since we have a hard dependency on Pyramid 1.3x which is not released
    yet, we have to force the dependency to Pyramid 1.3a5 in your application
    setup.py (Pyramid 1.3a5 is last version available at the time of writing
    this doc).
    So please edit the ``setup.py``, and update Pyramid dependency in
    ``install_requires`` so that it looks like ``'pyramid>=1.3a5'``.

Getting Started
---------------

First, we will check that your project is functionnal. You could follow
instructions available in the README.txt which has been generated by the
"alchemy" scaffold, but since it makes use of virtualenv whereas buildout
is the deploy/install tool of choice in c2c_pyramid projects, we'll give
instructions to use buildout directly.

Prior to using Buildout, its boostrap.py script should be run at the root of
the application::

    $ cd  /path/to/directory
    $ python bootstrap.py --version 1.5.2 --distribute \
        --download-base http://pypi.camptocamp.net/ \
        --setup-source http://pypi.camptocamp.net/distribute_setup.py

Then install the application by using buildout::

    $ ./buildout/bin/buildout

Once the application has been installed, you should create and populate the
database::

    $ ./buildout/bin/populate_{{project}} development.ini

Note that the previous command has generated a sqlite database in
{{project}}.db. Then you can launch pserve::

    $ ./buildout/bin/pserve development.ini
    Starting server in PID 3453.
    serving on http://0.0.0.0:6543

Let's open http://0.0.0.0:6543 in your browser, you should see a nice example
page which comes from the "alchemy" scaffold. This page gives you pointers to
the pyramid documentation.

Update your application
-----------------------

Now, we'll update the application slightly to demonstrate the use of a simple
Pyramid view bound to a mako template to serve a very basic OpenLayers
application.

Because this application will use ``JSTools`` to insert script tags in debug
mode, you have to add it as a dependency to your application. So edit your
``setup.py``, and append ``"JSTools"`` to the ``install_requires`` property.

Now, we'll update our ``development.ini`` and ``production.ini`` to configure
mako templates directory and jsbuild stuff.
We need to templatize these files so that then can have variables substituted
from the buildout. So first rename these files::

    $ mv development.ini development.ini.in
    $ mv production.ini production.ini.in

Then edit both ``development.ini.in`` and ``production.ini.in``, and add the
following lines to the ``[app:main]`` section::

    mako.directories = {{package}}:templates
    jsbuild_cfg = ${jsbuild:config}
    jsbuild_root_dir = ${jsbuild:base-dir}

Now launch buildout again to install ``JSTools`` and generate
``development.ini`` and ``production.ini`` with substituted variables::

    $ ./buildout/bin/buildout

Then configure a mako renderer for ``.html`` files for your Pyramid
application: edit ``{{package}}/__init__.py`` and add the following lines
before the ``config.scan()``::

    # bind the mako renderer to .html file extensions
    config.add_renderer('.html', renderer_factory)

Don't forget to also include the import statement::

    from pyramid.mako_templating import renderer_factory

Then edit the ``my_view`` Pyramid view in ``{{package}}/views.py`` so that it
looks like::

    @view_config(route_name='home', renderer='index.html')
    def my_view(request):
        return {"debug": "debug" in request.params}

Now you can launch ``pserve`` again::

    $ ./buildout/bin/pserve development.ini
    Starting server in PID 3453.
    serving on http://0.0.0.0:6543

Open http://0.0.0.0:6543 again to see simple OpenLayers map. You can also
open this page in debug mode with http://0.0.0.0:6543?debug=1 to load
javascript that wouldn't have been minified.

